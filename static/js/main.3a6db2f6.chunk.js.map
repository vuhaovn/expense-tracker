{"version":3,"sources":["components/Header.js","context/GlobalState.js","components/Balance.js","components/IncomeExpense.js","components/Transaction.js","components/TransactionList.js","components/AddTransaction.js","App.js","index.js"],"names":["Header","initState","transactions","id","name","amount","AppReducer","state","action","type","filter","tr","payload","GlobalContext","createContext","GlobalProvider","children","useReducer","dispatch","Provider","value","deleteTransaction","addTransaction","transaction","Balance","total","useContext","reduce","acc","currentValue","IncomeExpense","income","cur","expense","className","Math","abs","Transaction","sign","status","onClick","TransactionList","map","AddTransaction","useState","setName","setAmount","onSubmit","e","preventDefault","newTransaction","Date","now","random","htmlFor","onChange","target","placeholder","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3a6db2f6.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport const Header = () => {\r\n  return <h2>Expense Tracker</h2>\r\n}\r\n","import React, { useState, createContext, useReducer } from \"react\";\r\nexport const HeroContext = createContext();\r\n\r\nexport const HeroProvider = (props) => {\r\n  const [hero, setHero] = useState([\r\n    { name: 'Superman' },\r\n    { name: 'Batman' },\r\n    { name: 'The Flash' },\r\n  ])\r\n\r\n  return (\r\n    <HeroContext.Provider value={[hero, setHero]}>\r\n      {props.children}\r\n    </HeroContext.Provider>\r\n  )\r\n}\r\n\r\nconst initState = {\r\n  transactions: [\r\n    { id: 1, name: 'Flower', amount: -20 },\r\n    { id: 2, name: 'Salara', amount: 300 },\r\n    { id: 3, name: 'Book', amount: -10 },\r\n    { id: 4, name: 'Camera', amount: 150 },\r\n  ]\r\n}\r\n\r\nconst AppReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'DELETE':\r\n      return {\r\n        ...state,\r\n        transactions: state.transactions.filter(tr => tr.id !== action.payload)\r\n      }\r\n    case 'ADD':\r\n      return {\r\n        ...state,\r\n        transactions: [action.payload, ...state.transactions]\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const GlobalContext = createContext(initState)\r\n\r\nexport const GlobalProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(AppReducer, initState);\r\n  const deleteTransaction = (id) => {\r\n    dispatch({\r\n      type: 'DELETE',\r\n      payload: id,\r\n    })\r\n  }\r\n  const addTransaction = (transaction) => {\r\n    dispatch({\r\n      type: 'ADD',\r\n      payload: transaction,\r\n    })\r\n  }\r\n  return (\r\n    <GlobalContext.Provider value={{\r\n      transactions: state.transactions,\r\n      deleteTransaction,\r\n      addTransaction,\r\n    }}>\r\n      {children}\r\n    </GlobalContext.Provider>\r\n  )\r\n}","import React, { useContext } from 'react';\r\nimport { GlobalContext } from '../context/GlobalState';\r\n\r\nexport const Balance = () => {\r\n  const { transactions } = useContext(GlobalContext)\r\n\r\n  let total = transactions.reduce((acc, currentValue) => {\r\n    return acc + currentValue.amount\r\n  }, 0)\r\n\r\n  return (\r\n    <>\r\n      <h4>Your Balance</h4>\r\n      <h1 id=\"balance\">${total}</h1>\r\n    </>\r\n  )\r\n}\r\n","import React, { useContext } from 'react'\r\nimport { GlobalContext } from '../context/GlobalState';\r\n\r\nexport const IncomeExpense = () => {\r\n  const { transactions } = useContext(GlobalContext)\r\n  const income = transactions.reduce((acc, cur) => {\r\n    return acc + (cur.amount > 0 ? cur.amount : 0)\r\n  }, 0)\r\n  const expense = transactions.reduce((acc, cur) => {\r\n    return acc + (cur.amount < 0 ? cur.amount : 0)\r\n  }, 0)\r\n  return (\r\n    <div className=\"inc-exp-container\">\r\n      <div>\r\n        <h4>Income</h4>\r\n        <p id=\"money-plus\" className=\"money plus\">+${income}</p>\r\n      </div>\r\n      <div>\r\n        <h4>Expense</h4>\r\n        <p id=\"money-minus\" className=\"money minus\">-${Math.abs(expense)}</p>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, { useContext } from 'react'\r\nimport { GlobalContext } from '../context/GlobalState';\r\n\r\nexport const Transaction = ({ transaction }) => {\r\n  const { deleteTransaction } = useContext(GlobalContext)\r\n  const sign = transaction.amount < 0 ? '-' : '+';\r\n  const status = transaction.amount < 0 ? 'minus' : 'plus';\r\n  return (\r\n    <>\r\n      <li className={status}>\r\n        {transaction.name} <span>{sign}${Math.abs(transaction.amount)}</span>\r\n        <button className=\"delete-btn\" onClick={() => deleteTransaction(transaction.id)}>x</button>\r\n      </li>\r\n    </>\r\n  )\r\n}\r\n","import React, { useContext } from 'react'\r\nimport { GlobalContext } from '../context/GlobalState'\r\nimport { Transaction } from './Transaction'\r\n\r\nexport const TransactionList = () => {\r\n  const { transactions } = useContext(GlobalContext)\r\n  return (\r\n    <>\r\n      <h3>History</h3>\r\n      <ul id=\"list\" className=\"list\">\r\n        {transactions.map(transaction => (\r\n          <Transaction transaction={transaction} key={transaction.id} />\r\n        ))}\r\n      </ul>\r\n    </>\r\n  )\r\n}\r\n","import React, { useState, useContext } from 'react';\r\nimport { GlobalContext } from '../context/GlobalState';\r\n\r\nexport const AddTransaction = () => {\r\n  const [name, setName] = useState('');\r\n  const [amount, setAmount] = useState(0);\r\n\r\n  const { addTransaction } = useContext(GlobalContext)\r\n\r\n  const resetState = () => {\r\n    setName('');\r\n    setAmount(0);\r\n  }\r\n\r\n  const handleAdd = (e) => {\r\n    e.preventDefault();\r\n    const newTransaction = {\r\n      id: Date.now() + (Math.random() * 100000),\r\n      name,\r\n      amount: +amount,\r\n    }\r\n    addTransaction(newTransaction);\r\n    resetState();\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <h3>Add new transaction</h3>\r\n      <form id=\"form\" onSubmit={handleAdd}>\r\n        <div className=\"form-control\">\r\n          <label htmlFor=\"text\">Text</label>\r\n          <input type=\"text\" value={name} onChange={e => setName(e.target.value)} id=\"text\" placeholder=\"Enter text...\" />\r\n        </div>\r\n        <div className=\"form-control\">\r\n          <label htmlFor=\"amount\">Amount <br />\r\n            (negative - expense, positive - income)\r\n          </label>\r\n          <input type=\"number\" value={amount} onChange={e => setAmount(e.target.value)} id=\"amount\" placeholder=\"Enter amount...\" />\r\n        </div>\r\n        <button className=\"btn\">Add transaction</button>\r\n      </form>\r\n    </>\r\n  )\r\n}\r\n","import './App.css';\nimport { Header } from './components/Header';\nimport { Balance } from './components/Balance';\nimport { IncomeExpense } from './components/IncomeExpense';\nimport { TransactionList } from './components/TransactionList';\nimport { AddTransaction } from './components/AddTransaction';\nimport { GlobalProvider } from './context/GlobalState';\n\nfunction App() {\n  return (\n    <GlobalProvider>\n      <div className=\"App\">\n        <Header />\n        <div className=\"container\">\n          <Balance />\n          <IncomeExpense />\n          <TransactionList />\n          <AddTransaction />\n        </div>\n      </div>\n    </GlobalProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}